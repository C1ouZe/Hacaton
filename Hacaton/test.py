import cv2
# from pytesseract
import pytesseract
import numpy as np

# 1) Получить входные данные(строка с текстом)
# 2) Разделить результат по критериям
#   2.1) Разделить текст на две части: по слову состав
#   2.2) В первой части будет название товара, а во второй части будет строка с критериями через запятую
# 3) Сделать разделение второй части по запятой
# 4) Сделать алгоритм соответствия состава к критериям

category = {
    "Сухие каши и крахмальные продукты":['каша', 'каша быстрого приготовления','мюсли', 'рис'],
    "Молочные продукты":['овсяная каша','рисовый пудинг','йогурт','мягкий сыр','заварной крем']

}


# criterion = {
#     "Сухие каши и крахмальные продукты": 80,
#     "Молочные продукты": 60,
#     "Кондитерские изделия": False,
#     "Напитки":False
# }

text = """
ЙОГУРТ «АГУША» С КЛУБНИКОЙ
И БАНАНОМ, ОБОГАЩЕННЫЙ
ПРОБИОТИЧЕСКИМИ МИКРООР-
ГАНИЗМАМИ, С ПРЕБИОТИКОМ,
СМАССОВОЙ ДОЛЕЙ ЖИРА 2.7%,
ДЛЯ ПИТАНИЯ ДЕТЕЙ СТАРШЕ
$ МЕСЯЦЕВ.

СОСТАВ: молоко нормализованное, фруктовый
наполнитель «Клубника-банан» (сахар, вода,
пюре концентрированное клубничное, пюре
банановое, ароматизаторы натуральные
(«Клубника», «Банан»), крахмал кукурузный,
загуститель - пектины, соки концентрированные
(из красной свеклы, лимонный), пребиотик -
олигофруктоза, концентрат сывороточных
белков, закваска, пробиотические
микроорганизмы - бифидобактерии ВВ12..

ПИЩЕВАЯ ЦЕННОСТЬ В 100 Г ПРОДУКТА.
(СРЕДНИЕ ЗНАЧЕНИЯ):

„ТГ пребнотик .. . 0,6
г кальций. 88 И

(втч. сахароза 5,8 г)

ЭНЕРГЕТИЧЕСКАЯ ЦЕННОСТЬ 304 кДж
(КАЛОРИЙНОСТЬ)... .. 12 ккал
“-акция проводится на территории Р

- процент от суточной нормы.
(Содержание молочнокислых микроорганизмов
в продукте не менее 1х107 КОЕ/г. Содержание
бифидобактерий в продукте не менее 1х108 КОЕ/.
ТУ10.86.10-140-05268977-2014
"""


sub_massiv_text = text.lower().split('состав')

name_of_product = sub_massiv_text[0]

product_composition = sub_massiv_text[1]


def search_category(name_of_product):
    for i in category:
        for j in category.get(i):
            if j in name_of_product:
                now_category = i
    return now_category


def search_energy(product_composition):
    index = product_composition.find("ккал")
    return product_composition[index-4:index]




def normal_energy(name_of_product, product_composition):
    now_category = search_category(name_of_product)
    now_kkal = int(search_energy(product_composition))
    if now_category == "Сухие каши и крахмальные продукты":
        if now_kkal >= 80:
            print(f"Данный товар по критерию 'Энергетическая ценность' соответствует рекомендациям ВОЗ")
        else:
            print("Энергетическая ценность товара не соответствует рекомендациям ВОЗ")
    elif now_category ==  "Молочные продукты":
        if now_kkal >= 60:
            print(f"Данный товар по критерию 'Энергетическая ценность' соответствует рекомендациям ВОЗ")
        else:
            print("Энергетическая ценность товара не соответствует рекомендациям ВОЗ")


normal_energy(name_of_product, product_composition)
